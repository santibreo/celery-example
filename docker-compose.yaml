services:

  rabbitmq:
    image: rabbitmq:3-management
    env_file:
      - path: ./.env
        required: true
    container_name: celery-example-rabbitmq
    restart: on-failure
    ports:
      - 5672:5672
      - 15672:15672
    healthcheck:
      test: ["CMD", "rabbitmqctl", "ping"]
    networks:
      default:
        aliases:
          - rabbitmq

  celery:
    image: celery-example
    container_name: celery-example-celery
    env_file:
      - path: ./.env
        required: true
    depends_on:
      rabbitmq:
        condition: service_healthy
    build:
      context: .
      dockerfile: Dockerfile
      args:
        - UUID=${UUID:-1001}
        - API_PORT=${API_PORT:-80}
        - API_DIR=${API_DIR:-/usr/src/app}
        - API_GLOBAL_DIR=${API_GLOBAL_DIR:-/usr/src/app}
    volumes:
      - 'global-data:${API_GLOBAL_DIR:-/usr/src/user-data}'
    restart: unless-stopped
    networks:
      default:
        aliases:
          - celery
    command: [
      "celery", "--app", "celery_example", "worker",
      "--task-events", "--loglevel=INFO"
    ]

  flower:
    image: celery-example
    container_name: celery-example-flower
    env_file:
      - path: ./.env
        required: true
    depends_on:
      - celery
    volumes:
      - 'global-data:${API_GLOBAL_DIR}'
    restart: unless-stopped
    ports:
      - 5555:5555
    networks:
      default:
        aliases:
          - flower
    command: [
      "celery", "--app", "celery_example", "flower", "--loglevel=INFO",
      "--basic-auth=${FLOWER_USER}:${FLOWER_PASS}"
    ]

  app:
    image: celery-example
    container_name: celery-example-app
    env_file:
      - path: ./.env
        required: true
    depends_on:
      - rabbitmq
      - celery
      - flower
    networks:
      default:
        aliases:
          - app
    command: ["python", "app.py"]


volumes:
  global-data:
    name: API_GLOBAL_DATA
    external: true
